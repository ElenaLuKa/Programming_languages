// Задача 1: 
// Напишите программу, которая на вход принимает два числа и проверяет,  является ли первое число квадратом второго.
/*
bool NumsCvandrant(int A, int B)
{
    if(A*A == B) return true;
    return false; 
}

Console.WriteLine("Input a number A: ");
int numA = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Input a number B: ");
int numB = Convert.ToInt32(Console.ReadLine());
Console.WriteLine(NumsCvandrant(numA, numB));
*/

// Задача 2: 
// Напишите программу, которая на вход принимает два числа и выдаёт, какое число большее, а какое меньшее.
/*
void MaxNum(int num1, int num2)
{
    if(num1 > num2) Console.WriteLine($"Maximal number is: Num1 = {num1} and minimal number is: Num2 = {num2}");
    else Console.WriteLine($"Maximal number is: Num2 = {num2} and minimal number is: Num1 = {num1}");
}

Console.WriteLine("Input a Num1: ");
int Num1 = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Input a Num2: ");
int Num2 = Convert.ToInt32(Console.ReadLine());
MaxNum(Num1, Num2);
*/

// Задача 3: 
// Напишите программу, которая на вход принимает одно число (N), а на выходе показывает все целые числа в промежутке от -N до N.
/*
void Numbers(int N)
{
    for(int num = -N; num <= N; num++)
        Console.Write($" {num} ");
}

Console.WriteLine("Input a Number: ");
int N = Convert.ToInt32(Console.ReadLine());
Numbers(N);
*/

// Задача 4: 
// Напишите программу, которая принимает на вход три числа и выдаёт максимальное из этих чисел.



// 2, 3, 7 -> 7
// 44 5 78 -> 78
// 22 3 9 -> 22

// Задача 5: 
// Необходимо написать программу, которая выводит случайное число из отрезка от 10 до 99 и показывает наибольшую цифру числа.

// Задача 6: 
// Напишите программу, которая на вход принимает число и выдаёт, является ли число чётным (делится ли оно на два без остатка).

// 4 -> да
// -3 -> нет
// 7 -> нет

// Задача 7: 
// Необходимо написать программу, которая будет принимать на вход два числа и выводить, является ли второе число кратным первому.

// Задача 8: 
// Напишите программу, которая на вход принимает число (N), а на выходе показывает все чётные числа от 1 до N.

// 5 -> 2, 4
// 8 -> 2, 4, 6, 8

// Задача 9:
// Необходимо написать программу, которая будет принимать на вход число и проверять кратно ли оно одновременно A и B

// Задача 10: 
// Напишите программу, которая принимает на вход трёхзначное число и на выходе показывает вторую цифру этого числа.

// 456 -> 5
// 782 -> 8
// 918 -> 1

// Задача 11:
// Напишите программу, которая принимает на вход координаты точки (X и Y), при чем X b Y не равны нулю и выдает номер четверти плоскости, 
// в которой находится эта точка.

// Задача 12:
// Напишите программу, которая по заданному номеру четверти показывает диапазон возможных координат точек в этой четверти (x и y).

// Задача 13: 
// Напишите программу, которая выводит третью цифру заданного числа или сообщает, что третьей цифры нет.

// 645 -> 5
// 78 -> третьей цифры нет
// 32679 -> 6

// Задача 14: 
// Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 2D пространстве.

// Задача 15: 
// Напишите программу, которая принимает на вход цифру, обозначающую день недели, и проверяет, является ли этот день выходным.

// 6 -> да
// 7 -> да
// 1 -> нет

// Задача 16:
// Напишите программу, которая принимает на вход число (N) и выдает ряд квадратов чисел от 1 до N.

// Задача 17:
// Необходимо написать задачу, которая принимает на вход число(А) и выдает сумму чисел от 1 до А.

// Задача 18:
// Необходимо написать программу, которая принимает на вход число и выдает количество цифр в числе.

// Задача 19:
// Напишите программу, которая принимает на вход пятизначное число и проверяет, является ли оно палиндромом.

// 14212 -> нет
// 12821 -> да
// 23432 -> да

// Задача 20:
// Необходимо написать программу, которая принимает на вход число N и выдает произведение чисел от 1 до N.

// Задача 21:
// Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 3D пространстве.

// A (3,6,8); B (2,1,-7), -> 15.84
// A (7,-5, 0); B (1,-1,9) -> 11.53

// Задача 22:
// Задайте массив из 12 элементов, заполненный случайными числами из промежутка [-9, 9]. Найдите сумму отрицательных элементов массива.

// Задача 23:
// Напишите программу, которая принимает на вход число (N) и выдаёт таблицу кубов чисел от 1 до N.

// 3 -> 1, 8, 27
// 5 -> 1, 8, 27, 64, 125

// Задача 24:
// Напишите программу замены элементов массива: положительные элементы замените на соответствующие отрицательные, и наоборот.

// Задача 25: 
// Напишите цикл, который принимает на вход два числа (A и B) и возводит число A в натуральную степень B.

// 3, 5 -> 243 (3⁵)
// 2, 4 -> 16

// Задача 26: 
// Задайте массив. Напишите программу, которая определяет, присутствует ли заданное число в массиве.

// Задача 27: 
// Напишите программу, которая принимает на вход число и выдаёт сумму цифр в числе.

// 452 -> 11
// 82 -> 10
// 9012 -> 12

// Задача 28: 
// Напишите программу, которая перевернет одномерный массив (последний элемент будет на первом месте, а первый на последнем и т.д.)

// Задача 29: 
// Напишите программу, которая задаёт массив из 8 элементов и выводит их на экран.

// 1, 2, 5, 7, 19 -> [1, 2, 5, 7, 19]
// 6, 1, 33 -> [6, 1, 33]


// Задача 30: 
// Необходимо написать программу, которая принимает на вход три числа, и проверяет, может ли существовать треугольник 
// со сторонами такой длинны.

// Задача 31: 
// Не используя рекурсию, выведите первые N чисел Фибоначчи. Первые два числа Фибоначчи: а и b

// Задача 32:
// Напишите программу, которая будет создавать копию заданного массива с помощью поэлементного копирования. 

// Задача 33:
// Необходимо задать двумерный массив размером mxn, заполненный натуральными целыми числами

// Задача 34: 
// Задайте массив заполненный случайными положительными трёхзначными числами. Напишите программу, которая покажет 
// количество чётных чисел в массиве.

// [345, 897, 568, 234] -> 2

// Задача 35:
// Задайте двумерный массив размера m на n, каждый элемент массива находится по формуле Aij = i+j. 
// Выведите полученный массив на экран.

// Задача 36: 
// Задайте одномерный массив, заполненный случайными числами. Найдите сумму элементов, стоящих на нечётных позициях.

// [3, 7, 23, 12] -> 19
// [-4, -6, 89, 6] -> 0

// Задача 37: 
// Задайте двумерный массив. Найдите элементы у которых оба индекса четные, и замените эти элементы на их квадраты

// Задача 38: 
// Задайте массив вещественных чисел. Найдите разницу между максимальным и минимальным элементов массива.

// [3 7 22 2 78] -> 76

// Задача 39: 
// Задайте двумерный массив. Найдите сумму элементов, находящихся на главной диагонали (с индексами(0,0);(1,1) и т.д.)

// Задача 40: 
// Задайте двумерный массив. Напишите программу, которая заменяет строки на столбцы. 
// В случае, если это невозможно, программа должна вывести сообщение для пользователя.

// Задача 41: 
// Пользователь вводит с клавиатуры M чисел. Посчитайте, сколько чисел больше 0 ввёл пользователь.

// 0, 7, 8, -2, -2 -> 2
// 1, -7, 567, 89, 223-> 3

// Задача 42: 
// Задайте двумерный массив. Напишите программу, которая поменяет местами две строки, которые задаст пользователь

// Задача 43: 
// Напишите программу, которая найдёт точку пересечения двух прямых, заданных уравнениями y = k1 * x + b1, y = k2 * x + b2; 
// значения b1, k1, b2 и k2 задаются пользователем.

// b1 = 2, k1 = 5, b2 = 4, k2 = 9 -> (-0,5; -0,5)

// Задача 44: 
// Из двумерного массива целых чисел удалить строку и столбец, на пересечении которых расположен наименьший элемент

// Задача 45: 
// Задайте значение N. Напишите программу, которая выведет все натуральные числа в промежутке от 1 до N.

// Задача 46:
// Задайте значение M и N. Напишите программу, которая выведет все натуральные числа в промежутке от M до N.

// Задача 47: 
// Задайте двумерный массив размером m×n, заполненный случайными вещественными числами.

// m = 3, n = 4.
// 0,5 7 -2 -0,2
// 1 -3,3 8 -9,9
// 8 7,8 -7,1 9

// Задача 50. 
// Напишите программу, которая на вход принимает позиции элемента в двумерном массиве, и возвращает значение этого элемента или же указание, что такого элемента нет.

// Например, задан массив:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
// 1 7 -> числа с такими индексами в массиве нет

// Задача 52. 
// Задайте двумерный массив из целых чисел. Найдите среднее арифметическое элементов в каждом столбце.

// Например, задан массив:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
// Среднее арифметическое каждого столбца: 4,6; 5,6; 3,6; 3.

// Задача 54: 
// Задайте двумерный массив. Напишите программу, которая упорядочит по убыванию элементы каждой строки двумерного массива.

// Например, задан массив:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
// В итоге получается вот такой массив:
// 7 4 2 1
// 9 5 3 2
// 8 4 4 2

// Задача 56: 
// Задайте прямоугольный двумерный массив. Напишите программу, которая будет находить строку с наименьшей суммой элементов.

// Например, задан массив:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
// 5 2 6 7
// Программа считает сумму элементов в каждой строке и выдаёт номер строки с наименьшей суммой элементов: 1 строка

// Задача 58: 
// Задайте две матрицы. Напишите программу, которая будет находить произведение двух матриц.

// Например, даны 2 матрицы:
// 2 4 | 3 4
// 3 2 | 3 3
// Результирующая матрица будет:
// 18 20
// 15 18

// Задача 60. 
// Сформируйте трёхмерный массив из неповторяющихся двузначных чисел. Напишите программу, которая будет построчно выводить массив, добавляя индексы каждого элемента.

// Массив размером 2 x 2 x 2
// 66(0,0,0) 25(0,1,0)
// 34(1,0,0) 41(1,1,0)
// 27(0,0,1) 90(0,1,1)
// 26(1,0,1) 55(1,1,1)

// Задача 62. 
// Напишите программу, которая заполнит спирально массив 4 на 4.

// Например, на выходе получается вот такой массив:
// 01 02 03 04
// 12 13 14 05
// 11 16 15 06
// 10 09 08 07

// Задача 63:
// Напишите программу, которая на вход принимает два числа A и B, и возводит число A в целую степень.

// Задача 64: 
// Задайте значение N. Напишите программу, которая выведет все натуральные числа в промежутке от N до 1. Выполнить с помощью рекурсии.

// N = 5 -> "5, 4, 3, 2, 1"
// N = 8 -> "8, 7, 6, 5, 4, 3, 2, 1"

// Задача 66: 
// Задайте значения M и N. Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.

// M = 1; N = 15 -> 120
// M = 4; N = 8. -> 30

// Задача 68: 
// Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.

// m = 2, n = 3 -> A(m,n) = 9
// m = 3, n = 2 -> A(m,n) = 29



